

[homing_override]
axes: yz
set_position_z: 0
gcode:
    {% set param_x = params.X|default('undefined') %}
    {% set param_y = params.Y|default('undefined') %}
    {% set param_z = params.Z|default('undefined') %}

    {% set home_x = 'undefined' not in param_x %}
    {% set home_y = 'undefined' not in param_y %}
    {% set home_z = 'undefined' not in param_z %}
    {% set home_all = not(home_x or home_y or home_z) %}

    SKEW_PROFILE CLEAR=1

    G90
    G0 Z4 F300

    {% if (home_x or home_all) and not 'x' in printer.toolhead.homed_axes %}
      G28 X0
    {% endif %}

    {% if (home_y or home_all) and not 'y' in printer.toolhead.homed_axes %}
      SENSORLESS_HOME_Y
    {% endif %}
    

    {% if (home_z or home_all) %}

      G90
      G0 X13 Y5 F2000
      G28 Z0

      # Move away
      G90 ; absolute
      G0 Z5 F300

      ;Z_TILT_ADJUST
      ;SCREWS_TILT_CALCULATE MAX_DEVIATION=0.03

      ;G90
      ;G0 Z5 F1500
      ;G0 X1 Y-2 F3000

    {% endif %}


[gcode_macro z_balance_right_axis]
gcode:
    {% set z_axis_left = printer["gcode_macro z_balance"].z_axis_left %}
    {% if z_axis_left < 1.0 or z_axis_left > 2.0  %}
      {action_raise_error( "left Z axis outside of range" )}
    {% else %}
      g90
      g0 x220.6 f2500
      g0 z5 f1000
      probe
      g0 z5 f1000
      ; compute delta
      {% set delta = printer.probe.last_z_result - z_axis_left %}
      {% set delta_abs = delta|abs() %}
        {action_respond_info("delta: %.5f mm" % delta)}
      {% if delta|abs() > 0.5 %}
        {action_raise_error( "z delta outside of range. please manually fix" )}
      {% elif delta_abs < 0.025 %}
        {action_respond_info("z_balance level")}
      {% else %}
        {action_respond_info("correcting %.5f mm" % delta)}
         ;force_move stepper=stepper_z1 distance={delta} velocity=2 accel={printer.configfile.printer.max_z_accel/2}
         ;z_balance_right_axis   
      {%endif %}
    {% endif %}
    ; reset macro
    SET_GCODE_VARIABLE MACRO=z_balance VARIABLE=z_axis_left VALUE=0.0

[gcode_macro z_balance]
variable_z_axis_left: 0
gcode:
    g28
    probe
    g4 p10000
    { action_respond_info("%.5f" % printer.probe.last_z_result) }
    SET_GCODE_VARIABLE MACRO=z_balance VARIABLE=z_axis_left VALUE={printer.probe.last_z_result}
    { action_respond_info("%.5f" % printer["gcode_macro z_balance"].z_axis_left) }
    z_balance_right_axis

     
